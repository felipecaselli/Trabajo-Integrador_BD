services:
  python:
    build: ./python
    container_name: class-python
    depends_on:
      - neo4j
      - mongo
      - redis
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/work
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - classnet

  neo4j:
    image: neo4j:5-community
    container_name: class-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1g
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_db_temporal_timezone=America/Argentina/Buenos_Aires
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - classnet

  mongo:
    image: mongo:7
    container_name: class-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - classnet

  redis:
    image: redis:7
    container_name: class-redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - classnet

volumes:
  neo4j_data: {}
  neo4j_logs: {}
  neo4j_import: {}
  mongo_data: {}
  redis_data: {}

networks:
  classnet:
    driver: bridge
